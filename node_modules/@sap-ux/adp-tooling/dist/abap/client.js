"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFlexUISupportedSystem = getFlexUISupportedSystem;
exports.getSystemUI5Version = getSystemUI5Version;
const axios_extension_1 = require("@sap-ux/axios-extension");
const FILTER = {
    'scheme': 'http://www.sap.com/adt/categories/ui_flex',
    'term': 'dta_folder'
};
/**
 * Fetches system supports Flex UI features.
 *
 * @param {AbapServiceProvider} provider - Instance of the ABAP provider.
 * @param {boolean} isCustomerBase - Indicates whether the adaptation layer is CUSTOMER_BASE.
 * @returns {Promise<FlexUISupportedSystem | undefined>} settings indicating support for onPremise and UI Flex capabilities.
 */
async function getFlexUISupportedSystem(provider, isCustomerBase) {
    if (!isCustomerBase) {
        return {
            isOnPremise: true,
            isUIFlex: true
        };
    }
    const response = await provider.get(axios_extension_1.AdtCatalogService.ADT_DISCOVERY_SERVICE_PATH, {
        headers: {
            Accept: 'application/*'
        }
    });
    const isOnPremise = response.data.includes(FILTER.term);
    const isUIFlex = response.data.includes(FILTER.scheme);
    return { isOnPremise, isUIFlex };
}
/**
 * Fetches system UI5 Version from UI5RtVersionService.
 *
 * @param {AbapServiceProvider} provider - Instance of the ABAP provider.
 * @returns {string | undefined} System UI5 version.
 */
async function getSystemUI5Version(provider) {
    const service = await provider.getAdtService(axios_extension_1.UI5RtVersionService);
    return service?.getUI5Version();
}
//# sourceMappingURL=client.js.map